name: Integration test CephHelmSuite
on:
  pull_request:
    branches:
      - master
      - release-*

defaults:
  run:
    # reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail -x {0}

# cancel the in-progress workflow when PR is refreshed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

jobs:
  TestCephHelmSuite:
    if: ${{ github.event_name == 'pull_request' && github.ref != 'refs/heads/master' && !contains(github.event.pull_request.labels.*.name, 'skip-ci') }}
    runs-on: ubuntu-20.04
    strategy:
      fail-fast: false
      matrix:
        kubernetes-versions: ["v1.17.17", "v1.23.0"]
    steps:
      - name: checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0

      - name: check matrix k8s version
        run: |
          echo USE_K8S=$(echo ${{ matrix.kubernetes-versions }})
          if [ $(echo ${{ matrix.kubernetes-versions }}) == "v1.17.17" ]; then
            echo "OLDER_K8S=true" >> $GITHUB_ENV
          else
            echo "OLDER_K8S=false" >> $GITHUB_ENV
          fi
          echo env.OLDER_K8S

      - name: setup latest cluster resources
        if: ${{ env.OLDER_K8S == 'false' }}
        uses: ./.github/workflows/integration-test-config-latest-k8s
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          kubernetes-version: ${{ matrix.kubernetes-versions }}

      - name: setup older cluster resources
        if: ${{ env.OLDER_K8S == 'true' }}
        uses: ./.github/workflows/integration-test-config-older-k8s
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          kubernetes-version: ${{ matrix.kubernetes-versions }}

      - name: remove read permission from kube config file
        run: sudo chmod go-r ~/.kube/config

      - name: TestCephHelmSuite
        run: |
          tests/scripts/github-action-helper.sh collect_udev_logs_in_background
          tests/scripts/github-action-helper.sh create_helm_tag
          tests/scripts/helm.sh up
          export DEVICE_FILTER=$(lsblk|awk '/14G/ {print $1}'| head -1)
          SKIP_TEST_CLEANUP=false SKIP_CLEANUP_POLICY=false go test -v -timeout 1800s -failfast -run CephHelmSuite github.com/rook/rook/tests/integration

      - name: collect common logs
        if: always()
        run: |
          export LOG_DIR="/home/runner/work/rook/rook/tests/integration/_output/tests/"
          export CLUSTER_NAMESPACE="helm-ns"
          export OPERATOR_NAMESPACE="helm-ns-system"
          tests/scripts/collect-logs.sh

      - name: Artifact
        uses: actions/upload-artifact@v2
        if: failure()
        with:
          name: ceph-helm-suite-artifact-${{ matrix.kubernetes-versions }}
          path: /home/runner/work/rook/rook/tests/integration/_output/tests/

      - name: setup tmate session for debugging when event is PR
        if: failure() && github.event_name == 'pull_request'
        uses: mxschmitt/action-tmate@v3
        timeout-minutes: 60
