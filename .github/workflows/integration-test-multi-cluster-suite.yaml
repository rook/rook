on:
  pull_request:
    branches:
      - master
      - release-*

jobs:
  TestCephMultiClusterDeploySuite:
    if: ${{ github.event_name == 'pull_request' && github.ref != 'refs/heads/master' && !contains(github.event.pull_request.labels.*.name, 'skip-ci') }}
    runs-on: ubuntu-18.04
    env:
      BLOCK: /dev/disk/azure/resource
      BLOCK_DATA_PART: /dev/disk/azure/resource-part1
    strategy:
      fail-fast: false
      matrix:
        kubernetes-versions : ['v1.21.0']
    steps:
    - name: checkout
      uses: actions/checkout@v2

    - name: setup golang
      uses: actions/setup-go@v2
      with:
        go-version: 1.16

    - name: setup minikube
      uses: manusa/actions-setup-minikube@v2.3.1
      with:
        minikube version: 'v1.18.1'
        kubernetes version: ${{ matrix.kubernetes-versions }}
        start args: --memory 6g --cpus=2
        github token: ${{ secrets.GITHUB_TOKEN }}

    - name: check k8s cluster status
      run: |
        kubectl cluster-info
        kubectl get pods -n kube-system

    - name: use local disk
      run: |
        sudo swapoff --all --verbose
        sudo umount /mnt
        # search for the device since it keeps changing between sda and sdb
        PARTITION="/dev/$(lsblk|awk '/14G/ {print $1}'| head -1)1"
        sudo wipefs --all --force "$PARTITION"
        sudo lsblk
        # add a udev rule to force the disk partitions to ceph
        # we have observed that some runners keep detaching/re-attaching the additional disk overriding the permissions to the default root:disk
        # for more details see: https://github.com/rook/rook/issues/7405
        echo "SUBSYSTEM==\"block\", ATTR{size}==\"29356032\", ACTION==\"add\", RUN+=\"/bin/chown 167:167 $PARTITION\"" | sudo tee -a /etc/udev/rules.d/01-rook.rules

    - name: build rook
      run: |
       # set VERSION to a dummy value since Jenkins normally sets it for us. Do this to make Helm happy and not fail with "Error: Invalid Semantic Version"
       GOPATH=$(go env GOPATH) make clean && make -j$nproc IMAGES='ceph' VERSION=0 build
       docker images
       docker tag $(docker images|awk '/build-/ {print $1}') rook/ceph:master

    - name: TestCephMultiClusterDeploySuite
      run: |
       export TEST_SCRATCH_DEVICE=$(sudo lsblk --paths|awk '/14G/ {print $1}'| head -1)1
       export DEVICE_FILTER=$BLOCK
       go test -v -timeout 1800s -run CephMultiClusterDeploySuite github.com/rook/rook/tests/integration

    - name: Artifact
      uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: ceph-multi-cluster-deploy-suite-artifact
        path: /home/runner/work/rook/rook/tests/integration/_output/tests/

    - name: setup tmate session for debugging
      if: failure() && contains(github.event.pull_request.labels.*.name, 'debug-multi-cluster-suite')
      uses: mxschmitt/action-tmate@v3
