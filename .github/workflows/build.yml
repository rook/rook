name: Builds
on:
  pull_request:

defaults:
  run:
    # reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail -x {0}

# cancel the in-progress workflow when PR is refreshed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  macos-build:
    runs-on: macos-latest
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-ci')"
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: "1.24"

      - name: Set up Helm
        uses: azure/setup-helm@b9e51907a09c216f16ebe8536097933489208112 # v4.3.0
        with:
          version: v3.18.2

      - name: build rook
        run: |
          GOPATH=$(go env GOPATH) make clean && make -j$nproc BUILD_CONTAINER_IMAGE=false build

      - name: validate build
        run: tests/scripts/validate_modified_files.sh build

      - name: run codegen
        run: GOPATH=$(go env GOPATH) make codegen

      - name: validate codegen
        run: tests/scripts/validate_modified_files.sh codegen

      - name: run mod check
        run: GOPATH=$(go env GOPATH) make -j $(nproc) mod.check

      - name: validate modcheck
        run: tests/scripts/validate_modified_files.sh modcheck

      - name: run crds-gen
        run: GOPATH=$(go env GOPATH) make crds

      - name: validate crds-gen
        run: tests/scripts/validate_modified_files.sh crd

      - name: run gen-rbac
        run: GOPATH=$(go env GOPATH) make gen-rbac

      - name: validate gen-rbac
        run: tests/scripts/validate_modified_files.sh gen-rbac

  linux-build-all:
    runs-on: ubuntu-22.04
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-ci')"
    strategy:
      fail-fast: false
      matrix:
        go-version: ["1.24", "1.25"]
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - name: setup golang ${{ matrix.go-version }}
        uses: actions/setup-go@d35c59abb061a4a6fb18e82ac0862c26744d6ab5 # v5.5.0
        with:
          go-version: ${{ matrix.go-version }}

      - name: set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # master
        with:
          platforms: all

      - name: build.all rook with go ${{ matrix.go-version }}
        run: |
          tests/scripts/github-action-helper.sh build_rook_all
