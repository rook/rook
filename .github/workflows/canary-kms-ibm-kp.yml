name: Encryption KMS IBM Key Protect
on:
  # allows us to run workflow from fork and executing secrets from the environment
  pull_request_target:
    types: [labeled]
    branches:
      - master
      - release-*
    # branches:
    #   - master
    #   - release-*
  # pull_request:
  #   branches:
  #     - master
  #     - release-*

defaults:
  run:
    # reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail -x {0}


jobs:
  # block safeguard to only execute a job if it has been validated by trusted parties
  # approve: # First step
  #   runs-on: ubuntu-latest

  #   steps:
  #   - name: approve
  #     run: echo For security reasons, this job needs to be approved first before it can run.

  encryption-pvc-kms-ibm-kp:
    env:
      IBM_INSTANCE_ID: ${{ secrets.IBM_INSTANCE_ID }}
      IBM_SERVICE_API_KEY: ${{ secrets.IBM_SERVICE_API_KEY }}
    # this means the job must be approved by a trusted list of users before it can run
    # needs: [approve]
    runs-on: ubuntu-18.04
    # if: "!contains(github.event.pull_request.labels.*.name, 'skip-ci') || contains(github.event.pull_request.labels.*.name, 'safe-to-test')"
    if: "contains(github.event.pull_request.labels.*.name, 'safe-to-test')"
    steps:
    - name: checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0

    - name: fail if env no present
      if: "env.IBM_INSTANCE_ID == '' || env.IBM_SERVICE_API_KEY == ''"
      run: echo "IBM_INSTANCE_ID and IBM_SERVICE_API_KEY must be set in the environment" && exit 1

    - name: setup cluster resources
      uses: ./.github/workflows/setup-cluster-resources
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}

    - name: use local disk and create partitions for osds
      run: |
        tests/scripts/github-action-helper.sh use_local_disk
        tests/scripts/github-action-helper.sh create_partitions_for_osds

    - name: create cluster prerequisites
      run: |
        tests/scripts/localPathPV.sh $(lsblk --paths|awk '/14G/ {print $1}'| head -1)
        tests/scripts/github-action-helper.sh create_cluster_prerequisites

    - name: deploy cluster
      run: |
        tests/scripts/github-action-helper.sh deploy_manifest_with_local_build deploy/examples/operator.yaml
        envsubst < "tests/manifests/test-kms-ibm-kp-secret.in" > "tests/manifests/test-kms-ibm-kp-secret.yaml"
        envsubst < "tests/manifests/test-kms-ibm-kp-spec.in" > "tests/manifests/test-kms-ibm-kp-spec.yaml"
        cat tests/manifests/test-kms-ibm-kp-secret.yaml >> tests/manifests/test-cluster-on-pvc-encrypted.yaml
        yq merge --inplace --arrays append tests/manifests/test-cluster-on-pvc-encrypted.yaml tests/manifests/test-kms-ibm-kp-secret.yaml
        yq write -i tests/manifests/test-cluster-on-pvc-encrypted.yaml "spec.storage.storageClassDeviceSets[0].count" 2
        yq write -i tests/manifests/test-cluster-on-pvc-encrypted.yaml "spec.storage.storageClassDeviceSets[0].volumeClaimTemplates[0].spec.resources.requests.storage" 6Gi
        kubectl create -f tests/manifests/test-cluster-on-pvc-encrypted.yaml
        tests/scripts/github-action-helper.sh deploy_manifest_with_local_build deploy/examples/toolbox.yaml

    - name: wait for prepare pod
      run: tests/scripts/github-action-helper.sh wait_for_prepare_pod

    - name: wait for ceph to be ready
      run: |
        tests/scripts/github-action-helper.sh wait_for_ceph_to_be_ready osd 2
        kubectl -n rook-ceph get pods
        kubectl -n rook-ceph get secrets

    - name: validate encrypted osd
      run: |
        sudo lsblk

    - name: teardown cluster so that keys are removed from the KMS
      run: kubectl -n rook-ceph delete cephcluster --wait

    - name: collect common logs
      if: always()
      uses: ./.github/workflows/collect-logs
      with:
        name: encryption-pvc-kms-ibm-kp

    - name: setup tmate session for debugging when event is PR
      if: failure() && github.event_name == 'pull_request'
      uses: mxschmitt/action-tmate@v3
      timeout-minutes: 60
