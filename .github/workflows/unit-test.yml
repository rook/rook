name: Unit tests
on:
  push:
    tags:
      - v*
    branches:
      - master
      - release-*
  pull_request:
    branches:
      - master
      - release-*
  workflow_dispatch:
    inputs:
      version:
        type: string
        required: false
        description: "Version of jq to install"
        default: "1.7"

defaults:
  run:
    # reference: https://docs.github.com/en/actions/reference/workflow-syntax-for-github-actions#using-a-specific-shell
    shell: bash --noprofile --norc -eo pipefail -x {0}

# cancel the in-progress workflow when PR is refreshed.
concurrency:
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.head_ref || github.sha }}
  cancel-in-progress: true

permissions:
  contents: read

jobs:
  unittests:
    runs-on: ubuntu-22.04
    if: "!contains(github.event.pull_request.labels.*.name, 'skip-ci')"
    steps:
      - name: checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2
        with:
          fetch-depth: 0

      - uses: actions/setup-go@41dfa10bad2bb2ae585af6ee5bb4d7d973ad74ed # v5.1.0
        with:
          go-version: "1.23"

      - name: Setup jq
        uses: dcarbone/install-jq-action@e397bd87438d72198f81efd21f876461183d383a # v3.0.1
        with:
          version: "${{ inputs.version }}"

      - name: run unit tests
        run: |
          export ROOK_UNIT_JQ_PATH="$(which jq)"
          # AZURE_EXTENSION_DIR is set in GH action runners and affects Azure KMS unit tests; unset it
          unset AZURE_EXTENSION_DIR
          GOPATH=$(go env GOPATH) make -j $(nproc) test | tee output.txt

      - name: check mds liveness probe script ran successfully
        run: |
          if grep "skipping mds liveness probe script unit tests because jq binary location is not known" output.txt
          then
              echo "jq not found, fail the test"
              exit 1
          fi
