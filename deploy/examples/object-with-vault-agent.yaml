apiVersion: ceph.rook.io/v1
kind: CephObjectStore
metadata:
  name: my-store
  namespace: rook-ceph # namespace:cluster
spec:
  metadataPool:
    replicated:
      size: 1
  dataPool:
    replicated:
      size: 1
  preservePoolsOnDelete: false
  gateway:
    port: 80
    # securePort: 443
    instances: 1
    annotations:
      vault.hashicorp.com/agent-inject: "true"
      vault.hashicorp.com/agent-configmap: "my-configmap"
      vault.hashicorp.com/tls-secret: "vault-agent-tls"
  security:
    kms:
      connectionDetails:
        KMS_PROVIDER: vault
        VAULT_ADDR: http://127.0.0.1:8100
        VAULT_SECRET_ENGINE: kv
        VAULT_BACKEND_PATH: rook/ver2
        VAULT_AUTH_METHOD: kubernetes

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: my-configmap
  namespace: rook-ceph
data:
  config.hcl: |
    pid_file = "/home/vault/pidfile"

    auto_auth {
        method "kubernetes" {
            mount_path = "auth/kubernetes"
            config = {
                role = "rook-ceph"
            }
        }
    }

    cache {
        use_auto_auth_token = true
    }

    exit_after_auth = false

    listener "tcp" {
        address = "127.0.0.1:8100"
        tls_disable = "true"
    }

    vault {
      address = "https://vault.default.svc.cluster.local:8200"
      ca_cert = "/vault/tls/vault.ca"
      client_cert = "/vault/tls/vault.crt"
      client_key = "/vault/tls/vault.key"
    }

  config-init.hcl: |
    pid_file = "/home/vault/pidfile"

    auto_auth {
        method "kubernetes" {
            mount_path = "auth/kubernetes"
            config = {
                role = "rook-ceph"
            }
        }
    }

    cache {
        use_auto_auth_token = true
    }

    listener "tcp" {
        address = "127.0.0.1:8100"
        tls_disable = "true"
    }

    exit_after_auth = true

    vault {
      address = "https:://vault.default.svc.cluster.local:8200"
      ca_cert = "/vault/tls/vault.ca"
      client_cert = "/vault/tls/vault.crt"
      client_key = "/vault/tls/vault.key"
    }
