{{- $root := . -}}
{{- range $objectstore := .Values.cephObjectStores }}
---
kind: CephObjectStore
apiVersion: ceph.rook.io/v1
metadata:
  name: {{ $objectstore.name }}
  namespace: {{ $root.Release.Namespace }} # namespace:cluster
spec:
  {{- $objectstore.spec | toYaml | nindent 2 }}
{{- /* Merge user storageClass config with defaults */ -}}
{{- $defaultStorageClass := dict "enabled" true "name" "ceph-bucket" "reclaimPolicy" "Delete" "volumeBindingMode" "Immediate" "annotations" dict "labels" dict -}}
{{- $storageClass := mergeOverwrite $defaultStorageClass ($objectstore.storageClass | default dict) -}}
{{- if $storageClass.enabled }}
{{- $scName := $storageClass.name | default "ceph-bucket" }}
{{- $existing := lookup "storage.k8s.io/v1" "StorageClass" "" $scName }}
{{- if not $existing }}
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: {{ $scName }}
  {{- with $storageClass.labels }}
  labels:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
  {{- with $storageClass.annotations }}
  annotations:
    {{- . | toYaml | nindent 4 }}
  {{- end }}
provisioner: {{ $root.Release.Namespace }}.ceph.rook.io/bucket
reclaimPolicy: {{ $storageClass.reclaimPolicy | default "Delete" }}
volumeBindingMode: {{ $storageClass.volumeBindingMode | default "Immediate" }}
parameters:
  {{- include "rook-ceph-cluster.objectStorageClassParameters" (dict "objectstore" $objectstore "storageClass" $storageClass "root" $root) | nindent 2 }}
{{- end }}
{{- end }}
{{- end }}
