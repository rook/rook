# Default values for rook-cluster.
# This is a YAML-formatted file.
# Declare variables to be passed into your templates.

# Overrides Release Name if needed
# clusterNameOverride: rook

cluster:
  versionTag: master
  dataDirHostPath:
# To control where various services will be scheduled by kubernetes, use the placement configuration sections below.
# The example under 'all' would have all services scheduled on kubernetes nodes labeled with 'role=storage' and
# tolerate taints with a key of 'storage-node'.
#  placement:
#    all:
#      nodeAffinity:
#        requiredDuringSchedulingIgnoredDuringExecution:
#          nodeSelectorTerms:
#          - matchExpressions:
#            - key: role
#              operator: In
#              values:
#              - storage-node
#      tolerations:
#      - key: storage-node
#        operator: Exists
#    api:
#      nodeAffinity:
#      tolerations:
#    mds:
#      nodeAffinity:
#      tolerations:
#    mon:
#      nodeAffinity:
#      tolerations:
#    osd:
#      nodeAffinity:
#      tolerations:
#    rgw:
#      nodeAffinity:
#      tolerations:
  storage:                # cluster level storage configuration and selection
    useAllNodes: true
    useAllDevices: false
    deviceFilter:
    metadataDevice:
    location:
    storeConfig:
      storeType: filestore
      databaseSizeMB: 1024 # this value can be removed for environments with normal sized disks (100 GB or larger)
      journalSizeMB: 1024  # this value can be removed for environments with normal sized disks (20 GB or larger)
# Individual nodes and their config can be specified as well, but 'useAllNodes' above must be set to false. Then, only the named
# nodes below will be used as storage resources.  Each node's 'name' field should match their 'kubernetes.io/hostname' label.
#    nodes:
#    - name: "172.17.4.101"
#     directories:         # specific directores to use for storage can be specified for each node
#     - path: "/rook/storage-dir"
#   - name: "172.17.4.201"
#     devices:             # specific devices to use for storage can be specified for each node
#     - name: "sdb"
#     - name: "sdc"
#     storeConfig:         # configuration can be specified at the node level which overrides the cluster level config
#       storeType: bluestore
#   - name: "172.17.4.301"
#     deviceFilter: "^sd."

pools:
  - name: replicapool
    storageClass:
      enabled: true
      default: false
    spec:
      replication:
        size: 1
      # For an erasure-coded pool, comment out the replication size above and uncomment the following settings.
      # Make sure you have enough OSDs to support the replica size or erasure code chunks.
      #erasureCode:
      #  codingChunks: 2
      #  dataChunks: 2
  #- name: erasurepool
  #  storageClass:
  #    enabled: true
  #    default: false
  #  spec:
      # replication:
      #   size: 1
      # For an erasure-coded pool, comment out the replication size above and uncomment the following settings.
      # Make sure you have enough OSDs to support the replica size or erasure code chunks.
  #    erasureCode:
  #     codingChunks: 2
  #     dataChunks: 2

rgw:
  externalService:
    enabled: true
    name: rgw
    type: NodePort
    externalPort: 53390
    internalPort: 53390
  ingress:
    enabled: false
    # Used to create Ingress record (should used with service.type: ClusterIP).
    hosts:
      - chart-example.local
    annotations:
      # kubernetes.io/ingress.class: nginx
      # kubernetes.io/tls-acme: "true"
    tls:
      # Secrets must be manually created in the namespace.
      # - secretName: chart-example-tls
      #   hosts:
      #     - chart-example.local

# Allows Ceph settings to be overridden
# WARNING: Modify Ceph settings carefully. You are leaving the sandbox tested by Rook. Changing the settings could result in unhealthy daemons or even data loss if used incorrectly.
# rookConfigOverride: |
#   [global]
#     osd crush update on start = false
#     osd pool default size = 2
