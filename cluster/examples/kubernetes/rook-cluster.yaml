apiVersion: v1
kind: Namespace
metadata:
  name: rook
---
apiVersion: rook.io/v1alpha1
kind: Cluster
metadata:
  name: rook
  namespace: rook
spec:
  # The path on the host where configuration files will be persisted. If not specified, a kubernetes emptyDir will be created (not recommended).
  # Important: if you reinstall the cluster, make sure you delete this directory from each host or else the mons will fail to start on the new cluster.
  # In Minikube, the '/data' directory is configured to persist across reboots. Use "/data/rook" in Minikube environment.
  dataDirHostPath: /var/lib/rook
  # toggle to use hostNetwork
  hostNetwork: false
  # To control where various services will be scheduled by kubernetes, use the placement configuration sections below.
  # The example under 'all' would have all services scheduled on kubernetes nodes labeled with 'role=storage' and
  # tolerate taints with a key of 'storage-node'.
  storage: # cluster level storage configuration and selection
    useAllNodes: true
    useAllDevices: false
    deviceFilter:
    metadataDevice:
    location:
    storeConfig:
      # Cluster level list of directories to use for storage. These directories will be created for all nodes that do not have `directories` set.
      directories:
        # - path: /rook/storage-dir
      # Individual nodes and their config can be specified, but 'useAllNodes' above must be set to false. Then, only the named
      # nodes below will be used as storage resources.  Each node's 'name' field should match their 'kubernetes.io/hostname' label.
      nodes:
        # - name: "172.17.4.101"
          # directories: # specific directories to use for storage can be specified for each node
          # - path: "/rook/storage-dir"
        # - name: "172.17.4.201"
          # devices: # specific devices to use for storage can be specified for each node
            # - name: "sdb"
            # - name: "sdc"
          # osd:  # any settings found under the overall cluster ceph osd settings can be overridden on a per-node basis here
            # storeType: bluestore
        # - name: "172.17.4.301"
          # deviceFilter: "^sd."
  placement:
    all:
      # nodeAffinity:
      #   requiredDuringSchedulingIgnoredDuringExecution:
      #     nodeSelectorTerms:
      #     - matchExpressions:
      #       - key: role
      #         operator: In
      #         values:
      #         - storage-node
      # podAffinity:
      # podAntiAffinity:
      # tolerations:
      #  - key: storage-node
      #    operator: Exists
    api:
      # nodeAffinity:
      # tolerations:
      # podAffinity:
      # podAntiAffinity:
  resources:
    api:
      # The requests and limits set in this example allow the Rook api pod to use half of one CPU core and 1 gigabyte of memory
      # limits:
      #   cpu: "500m"
      #   memory: "1024Mi"
      # requests:
      #   cpu: "500m"
      #   memory: "1024Mi"
  ceph:
    # set the amount of mons to be started
    mon:
      # the desired number of mons
      count: 3
      placement:
        # nodeAffinity:
        # tolerations:
      resources:
        # for an example of setting resource limits see the example above for the api service
    mgr:
      placement:
        # nodeAffinity:
        # tolerations:
        # podAffinity:
        # podAntiAffinity:
      resources:
        # for an example of setting resource limits see the example above for the api service
    osd:
      storeType: bluestore
      databaseSizeMB: 1024 # this value can be removed for environments with normal sized disks (100 GB or larger)
      journalSizeMB: 1024  # this value can be removed for environments with normal sized disks (20 GB or larger)
      placement:
        # nodeAffinity:
        # tolerations:
      resources:
        # for an example of setting resource limits see the example above for the api service
