apiVersion: v1
kind: ServiceAccount
metadata:
  name: rook-nfs-operator
  namespace: rook-nfs-system
---
kind: ClusterRoleBinding
apiVersion: rbac.authorization.k8s.io/v1
metadata:
  name: rook-nfs-operator
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: rook-nfs-operator
subjects:
  - kind: ServiceAccount
    name: rook-nfs-operator
    namespace: rook-nfs-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: rook-nfs-operator
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - ""
    resources:
      - pods
    verbs:
      - list
      - get
      - watch
      - create
  - apiGroups:
      - ""
    resources:
      - services
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - apps
    resources:
      - statefulsets
    verbs:
      - create
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - nfs.rook.io
    resources:
      - nfsservers
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - nfs.rook.io
    resources:
      - nfsservers/status
      - nfsservers/finalizers
    verbs:
      - get
      - patch
      - update
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: rook-nfs-operator
  namespace: rook-nfs-system
  labels:
    app: rook-nfs-operator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: rook-nfs-operator
  template:
    metadata:
      labels:
        app: rook-nfs-operator
    spec:
      serviceAccountName: rook-nfs-operator
      containers:
        - name: rook-nfs-operator
          image: rook/nfs:master
          imagePullPolicy: IfNotPresent
          args: ["nfs", "operator"]
          env:
            - name: POD_NAME
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
