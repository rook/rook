
# Gopkg.toml
#
# Add constraints for packages that are a direct dependency
# of this project (i.e. they are imported by golang source code)
# and you want to ensure that only a specific version is needed.
# if you don't need a specific version don't add the constraint here.
# Constraints are of the form:
#
# [[constraint]]
#   name = "github.com/user/project"
#   version = "1.0.0"
#
# [[constraint]]
#   name = "github.com/user/project2"
#   revision = "8991bc29aa16c548c550c7ff78260e27b9ab7c73"
#
# revision constraints are preferred to version constraints.
#
# add overrides for packages that are not used directly but
# you want to ensure that are at a specific version. for example,
#
# [[override]]
#  name = "github.com/x/y"
#  version = "2.4.0"

required = [
    "k8s.io/code-generator/cmd/client-gen"
    ]

ignored = [
    "github.com/rook/rook/.cache",
    "github.com/rook/rook/.work",
    "github.com/rook/rook/Documentation",
    "github.com/rook/rook/_output",
    "github.com/rook/rook/build",
    "github.com/rook/rook/cluster",
    "github.com/rook/rook/images"
    ]

[prune]
  go-tests = true
  unused-packages = true

  # we need "unused packages" for code generator related repos because
  # the dependencies cannot all be captured in golang source code
  # e.g., codegen.sh depends on generate-groups.sh
  [[prune.project]]
    name = "k8s.io/code-generator"
    unused-packages = false

  [[prune.project]]
    name = "k8s.io/gengo"
    unused-packages = false

#
# Kubernetes projects below should all be updated as a set
# as they are versioned together.
#

[[constraint]]
  name = "k8s.io/kubernetes"
  version = "=v1.14.0"

[[constraint]]
  name = "k8s.io/kube-controller-manager"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/api"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/apiserver"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/apiextensions-apiserver"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/apimachinery"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/code-generator"
  version = "kubernetes-1.14.0"

[[constraint]]
  name = "k8s.io/client-go"
  version = "v11.0.0"

[[constraint]]
  name = "sigs.k8s.io/sig-storage-lib-external-provisioner"
  version = "v3.1.0"

# Kubernetes 1.14 dependencies on random package versions:
[[override]]
  name = "github.com/evanphx/json-patch"
  revision = "5858425f75500d40c52783dce87d085a483ce135"

[[override]]
  name = "sigs.k8s.io/structured-merge-diff"
  revision = "e85c7b244fd2cc57bb829d73a061f93a441e63ce"

# kubernetes requires an older version of docker distribution
[[override]]
  name = "github.com/docker/distribution"
  revision = "edc3ab29cdff8694dd6feb85cfeb4b5f1b38ed9c"

# Github mirror of goautoneg, original repo uses Mercurial
# and the Jenkins AMI doesn't have hg installed
[[override]]
  name = "bitbucket.org/ww/goautoneg"
  source = "github.com/rancher/goautoneg"

[[override]]
  name = "k8s.io/apiextensions-apiserver"
  version = "kubernetes-1.14.0"

[[override]]
  name = "k8s.io/apimachinery"
  version = "kubernetes-1.14.0"

[[override]]
  name = "k8s.io/client-go"
  version = "v11.0.0"
